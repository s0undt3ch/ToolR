name: Authenticated Checkout
description: Checkout the repository with an authenticated token

inputs:
  fetch-depth:
    required: false
    description: 'Fetch depth'
    default: '1'
  persist-credentials:
    required: false
    description: 'Persist credentials'
    default: 'true'

outputs:
  token:
    description: 'GitHub App token'
    value: ${{ steps.app-token.outputs.token }}
  app-slug:
    description: 'GitHub App slug'
    value: ${{ steps.app-token.outputs.app-slug }}
  installation-id:
    description: 'GitHub App installation ID'
    value: ${{ steps.app-token.outputs.installation-id }}

runs:
  using: composite

  steps:
    - uses: actions/create-github-app-token@v2
      id: app-token
      with:
        app-id: ${{ vars.GH_APP_ID }}
        private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

    - name: Get GitHub App User ID
      id: get-user-id
      shell: bash
      run: |
        echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}

    - name: Configure Git
      shell: bash
      run: |
        git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
        git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

    - uses: actions/checkout@v5
      with:
        token: ${{ steps.app-token.outputs.token }}
        fetch-depth: ${{ inputs.fetch-depth }}
        persist-credentials: ${{ inputs.persist-credentials == 'true' }}
