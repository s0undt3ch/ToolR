name: Build Linux

on:
  workflow_call:
    inputs:
      display-name:
        required: true
        type: string
        description: 'Display name for the build job'

jobs:
  build:
    name: ${{ inputs.display-name }} (${{ matrix.python-version }}, ${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"
        arch:
          - "x86_64"
          - "aarch64"
        # This creates 6 parallel builds: 3 Python versions Ã— 2 architectures

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: linux-cargo-${{ matrix.python-version }}-${{ matrix.arch }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install `cibuildwheel`
        run: |
          pip install cibuildwheel

      - name: Set up QEMU for ARM emulation
        uses: docker/setup-qemu-action@v3

      - name: Build wheels
        env:
          CIBW_PLATFORM: linux
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.python-version == '3.11' && 'cp311*' || matrix.python-version == '3.12' && 'cp312*' || 'cp313*' }}
        run: |
          echo "Building for Python ${{ matrix.python-version }} on ${{ matrix.arch }}"
          echo "CIBW_BUILD=$CIBW_BUILD"
          echo "CIBW_ARCHS=$CIBW_ARCHS"
          cibuildwheel --output-dir dist

      - uses: actions/upload-artifact@v4
        with:
          name: dist-linux-${{ matrix.python-version }}-${{ matrix.arch }}
          path: dist
